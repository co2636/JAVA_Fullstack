
// 주제 : 변수의 초기화에 대해...

// 변수 초기화란?  -  변수를 선언하고 처음으로 값을 저장하는 것. 

public class InitTest {
		// 인스턴스 변수 
		//  - 초기화 하지 않아도 자동으로 변수의 자료형(int)에 맞는 기본값 0 으로 초기화가 이루어진다.
		//  - 인스턴스 변수는 초기화 하지않고 사용가증!  기본값으로 초기화가 이루어지기 때문 
	
			int x; // 기본값 0으로 초기화가 이루어짐 
			int y = x;  // x 인스턴스 변수에는 0이 저장되어 있으므로 사용가능 
		
		// 인스턴스 메소드
			public void method1(int y) {
				// 지역변수 
				//  - 메소드의 {}중괄호 내부에 선언한 변수
				//  - 지역변수는 메소드 {}중괄호 내부에서만 접근해서 사용가능함 
				//  - 지역변수를 선언하고 사용하기 위해서는 반드시 지역변수 초기화 필요함 
				//  - 지역변수는 기본값으로 초기화가 안됨 
				int i; // 지역변수 i 를 선언하고 반드시 기본값등으로 초기화가 필요함 
						// 예.  int  i = 0;
//				int j = i;  // 컴파일 에러가 발생함 .  이유는 지역변수를 초기화 하지 않았음 
				
			}
			
			// 명시적 변수 초기화를 통해  static 클래스변수 선언 
			// 정수 10개를 저장시킬 배열 메모리 생성 후 배열메모리 주소값을 arr 변수에 초기화 
			static int[] arr = new int[10]; // 개별자 직접 명시적 초기화 
			
			// 클래스 초기화 블럭을 이용해서 배열의 각 원소에 임의의 값 정수값을 랜덤으로 저장시키자 
			static { 
				// arr 배열의 길이만큼 반복해서 0 index 위치 ~ 9 index 위치의 각 원소에 각각 차례로 1 ~ 10 사이의 임의의 랜덤 정수값 하나씩 초기화(저장) 
				for(int i = 0; i < arr.length; i++){
					arr[i] = (int)(Math.random() * 10) + 1;
				}
				
			}
			// 참고. 정수 1과 10 사이의 임의의 랜덤값 하나를 반환하는 코드 
			// (int)(Math.random() * 10) + 1;
			
			
	/* static 을 작성한 배열의 각 원소 초기화 연습 */
	public static void main(String[] args) {
		
		// arr 배열값들을 얻어서 출력 
		for(int i = 0; i < InitTest.arr.length; i++) {
			
			System.out.println("arr["+ i + "] : "+ InitTest.arr[i]);
			
		}
		
		
	}

}

/*
  결론
  		1. 배열메모리에 필요한 초기화를 하기 위해서는 
  			명시적 초기화만으로는 복잡한 배열 초기화 작업을 할 수 없기 때문에 
  			이런 경우 추가로 클래스 초기화 블럭을 사용하도록 한다.
  			
  		2. 인스턴스 변수의 초기화는 
  			생성자 또는 인스턴스 초기화 블럭을 사용한다. 
  			
  			
  			
  */
