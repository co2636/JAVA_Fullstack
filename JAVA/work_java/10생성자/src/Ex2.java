/*
  생성자?
   - 객체를 만들 때 처음호출되는 특별한 메소드 종류 중 하나 
   - 객체를 만들때 생성자는 그 객체 메모리 내부의 객체 변수값을 초기화 하기위해 사용되는 메소드가 생성자이다. 
 
 생성자 작성 문법 
 
 		class 클래스 이름{
 		
 			
 			// 생성자 
 			 public  생성자명(매개변수들){
 			 		
 			 		클래스 내부에 만들어 놓은 객체 변수들 초기화 시킬 코드 작성; 
 			 		
 			 }
 			
 			- 접근제어자(public) 위치
 				public , private ,  protected, default  접근제어자 중 하나 작성
 				일반적으로 생성자는 객체 메모리가 클래스 외부에서 생성 될 수 있도록 public 으로 선언함 
 			
 			- 생성자명은 반드시 클래스이름과 동일한 이름으로 작성해야한다.
 				예를 들어 클래스 이름이 Car 이면 생성자 이름도 Car 여야 한다.
 			
 			- 매개변수들 위치는 생성자는 매개변수를 가질수 있고, 
 				: 이 매개변수들을 통해 객체가 생성될때 필요한 데이터를 전달받아 객체변수들을 초기화 해야함 
 				: 매개변수가 없는 생성자도 만들수 있으며, 이런 생성자를 기본생성자라고 부른다.
 				
 			- 생성자는 메소드와 다르게  반환타입 ( void , String , int ...)을 적지 않습니다.
 			   그래서 return 구문도 작성하지 않습니다.
 			   
 			
 			
 			
 		}
 		
 생성자의 종류 
 1.  기본생성자  - 매개변수를 작성하지 않고 객체변수의 값을 초기화 시키는 코드가 작성된  생성자 
 
 		public 생성자명(){ 객체변수 초기화 코드;  } 
 
 2.  매개변수가 있는 생성자  - 객체를 만들때 객체 변수들의 초기값을 직접 저장할 수 있도록 도와주는 생성자 
 	
 		public 생성자명(매개변수, 매개변수,....){ 객체 변수 초기화 코드; };
  
  
  
 
 */
class Car{
	// 변수
	String color; // 색상을 저장하는 변수 
	int year; // 연식을 저장하는 변수 

	//1. 기본생성자 만들기 - 매개변수를 작성하지 않고 객체변수의 값을 초기화 시키는 코드가 작성된  생성자 
	public Car() {
		
		color = "검정색"; // 색상을 기본값 "검정색" 으로 초기화 
		year = 2020; // 연식을 기본값 2020으로 초기화 
		
	}
	
	//2. 매개변수가 있는 생성자 만들기 - 객체를 만들때 객체 변수들의 초기값을 직접 저장할 수 있도록 도와주는 생성자 
 	public Car(String carColor , int carYear) {
 		
 		
 		color = carColor; // 매개변수 carColor로 전달받은 값을 color 객체변수에 저장 
 		year = carYear;  // 매개변수 carYear로 전달받은 값을 year 객체변수에 저장 
 		
 		
 	}
	
}


public class Ex2 {

	public static void main(String[] args) {

		// Car 클래스 설계도 하나를 이용해 Car 객체를 생성할때 기본 생성자를 호출해서 객체를 생성하자 
		
		// 문법 
		//			클래스자료형 참조변수 = new 기본생성자이름();
		
		Car myCar= new Car(); // Car  객체 생성하는 동시에 Car() 통해 기본 생성자 호출하면 Car 객체 메모리 내부에 만들어진 객체변수값들 초기화 함 
		
		System.out.println(myCar.color); //  <- "검정색"		
		System.out.println(myCar.year); //  <- 2020
		
		// Car 클래스 설계도 하나를 이용해  Car 객체를 생성할때 매개변수가 있는 생성자를 호출해서 객체메모리를 완성하자 
		// 문법 
		//			클래스자료형 참조변수 = new  매개변수가 있는 생성자명(값1, 값2);
		Car myCar2 = new Car("빨간색",2022);
		
		System.out.println("Car2 - 색상 : " + myCar2.color); // <- "빨간색"
		System.out.println("Car2 - 연식 : " +myCar2.year); // <- 2022
	
		/*
		 	요약 : 
		 				생성자는 클래스 이름과 동일한 이름을 작성해서 만들어야하고, 객체가 만들어질때 객체변수들을 빠르게 초기화 할 목적으로 사용됩니다.
		 				
		 				생성자는 매개변수를 가질 수 있으며, 이를 통해 객체를 다양한 방식으로 초기화 할수 있다.
		 				
		 				기본 생성자는 매개변수가 없고, 객체변수들의 기본값으로 초기화 합니다.
		 				
		 				매개변수가 있는 생성자는 객체변수들에 필요한 값을 받아 객체변수들의 원하는대로 설정할 수 있습니다.
		 				
		 				
		 
		 	
		 
		 */
		
		
	}

}
