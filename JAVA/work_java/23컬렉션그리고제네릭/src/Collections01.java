/*
	패키지 : .class 자바 실행파일을 압축해 놓은 폴더
	
	라이브러리 : 관련 있는 패키지들을 압축해 놓은 .jar 파일 
	
	프레임워크 : 라이브러리 파일들을 압축해 놓은 큰 단위의 폴더 
 	
 	API : 특정 자바프로그램과 특정 MySQL 데이터베이스 프로그램 등의 플랫폼을 연결하는 중간 프로그램(JDBC API)
 	
 	컬렉션 라이브러리
 	- 데이터를 저장할 가변으로 늘어나는 배열메모리를 만들때 사용되는 클래스들을 제공하는 패키지들의 모음 
 	
 	컬렉션 라이브러리 내부에 만들어서 제공하는 최상위 Collection 이라는 이름의 인터페이스  
 	
 		하위 Set 인터페이스 
 		- Set 인터페이스를 구현한 자식가변길이 배열을 만들때 사용되는 클래스들은 가변길이 배열을 만들어 객체(데이터)를 중복 저장을 허용하지 않고,
 			또한 배열에 추가된 순서대로 객체를 저장하지 않고 랜덤으로 저장한다.
 		
 		하위 List 인터페이스
 		- List 인터페이스를 구현한 자식가변길이 배열을 만들때 사용되는 클래스들은 가변길이 배열을 만들어 객체(데이터)를 중복 저장을 허용하고, 
 			또한 배열에 추가된 순서대로 객체를 저장한다.
 		
 		하위 Map 인터페이스 
 		- Map 인터페이스를 구현한 자식가변길이 배열을 만들때 사용되는 클래스들은 가변길이 배열을 만들어 객체(데이터)를 단독으로 저장하지 않고,
 		 	(key-객체)를 한쌍으로 묶어 한쌍의 형태로 배열에 저장한다.
 		 	배열에 저장된 객체(데이터)를 얻으려면 key 를 이용해서 객체(데이터)를 얻을 수 있다. 
 		 	
	주제 : Set 부모 인터페이스를 구현한(추상메소드를 오버라이딩한) 자식클래스 HashSet 클래스를 사용하여 가변으로 칸이 늘어나는 가변길이 배열 만들기 
 	
 */
import java.util.HashSet;
import java.util.Set;
public class Collections01 {
	public static void main(String[] args) {
		
		// 업캐스팅을 이용하여 부모 Set 인터페이스 자료형의 참조변수에 자식 HashSet 클래스의 객체 생성 후 주소번지 저장 
		Set set = new HashSet();
		
		// HashSet 가변길이 배열에 저장된 객체(데이터)의 갯수 반환
		System.out.println("HashSet 배열에 저장된 객체의 갯수 -> " + set.size()); // 0
		
		// HashSet 가변길이 배열에 객체를 추가하기 위해 add 메소드 사용!
		set.add("하나"); 
		set.add(2); // 오토박싱 되어 new Integer(2); 객체가 추가되어 저장되는 것이다.
		set.add(3.42); // 오토박싱 되어 new Double(3.42); 객체가 추가되어 저장되는 것이다.
		set.add("넷");
		set.add("five");
		set.add(new Integer(6));
		
		// HashSet 가변길이 배열에 저장된 객체(데이터)의 갯수 반환
		System.out.println("HashSet 배열에 저장된 객체의 갯수 -> " + set.size()); // 6
		
		// HashSet 가변으로 늘어나는 배열에 저장된 어떤 객체들이 있는지 확인을 위해 toString() 메소드를 호출해 전체 배열을 문자열로 변환해서 반환해 출력 
		System.out.println(set.toString()); // [2, 6, 넷, 하나, 3.42, five]

		// HashSet 가변길이 배열에는 add 메소드를 이용하여 추가된 순서대로 객체가 저장되지 않고 랜덤으로 뒤섞여서 저장된다.
		
		
	}

}
