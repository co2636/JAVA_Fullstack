/*
  
  	자료형 변환
  	
  	상수 역시 자료의 형태가 나뉘고 상수마다 할당되는 변수메모리의 크기가 다르다. 
  	예를들어 123456은 int 자료형태의 정수이지만 123456L은 long 자료형태의 정수이다.
  	123456을 저장하기 위해서는  4바이트 메모리에 저장될 수 있지만,
  	123456L을 저장하기 위해서는 8바이트 메모리가 요구된다.
  	상수값은 서로 다른 유형의 자료형으로 선언된 변수에 저장할 경우 자료의 형태가 변환되어 저장된다.
  	이것을 "자료형변환" 이라고 부른다.
  	
  	자료형 변환 종류
  	
  	1. 자동 형변환 
  			-> 대입연산자기호 = 로 값을 변수에 대입할 경우	
  			      대입연산자기호 = 왼쪽과 오른쪽에 기술한 변수의 자료형과 저장할 값이 자료형이 서로 다를 경우
  			      오른쪽에 저장할 값의 형변환이 일어난다.
  			      
  			      자동 형변환? 개발자가 별다른 작업을 하지 않더라도 자바컴파일러에 의해 
  			      						 자동으로 자료의 형태가 변환되는 것을 자동 형변환이라 한다.
  			     
  			      
  			      예)  변수 b 와 c 를 선언하고 값을 각각 저장 
  			      		short b = 128;
  			      		int c = 36728;
  			      		
  			      		// short 자료형 변수 b 메모리에 저장된 128이라는 값(2byte 크기에 정수가 저장될 작은값)을
  			      		// int 자료형 변수  c 메모리( 4byte 크기에 정수가 저장될 큰 메모리  )에 저장시키려고 할때 
  			      		// 자바 컴파일러는 short 자료형의 값 128을 int 자료형의 값 128로 자동 형변환 하여 c 변수에 저장하게 된다.
  			      		c = b;   //  컴파일러에 의해 자동 형 변환이 일어나 c 변수에 128 int 값이 저장
  	
  	2. 강제 형변환
  	
  			-> 큰 용량의 변수메모리에 저장된 값을 	작은 용량의 변수 메모리에 저장하려고 할 경우
  				  작은 요량의 변수메모리에 저장하기에는 너무 큰값이 범람할 수 있으므로 문제가 발생할 수 있다.
  				  이럴 경우에는 컴파일러가 자동으로 형변환 하지 않기 때문에 개발자가 강제로 자료형의 형태를 변환 해야한다.
  				  이걸 "강제형변환" 이라고 부른다.
  				  
  				  
  			
  			 
 */



// 예제 : 

public class Data05 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}
