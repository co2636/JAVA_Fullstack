
// 예제 : 변수를 선언할때 사용되는 자료형의 역할에 대해서 살펴 보자.

// 자료형의 역할 2가지 
public class Data04 {

	public static void main(String[] args) {
		
		/*
		 		변수 메모리 선언 문법
		
		  				자료형 변수_이름;
		  				
		  				
		  		결론 1. 첫번째 이유는 변수 메모리에 저장되는 값의 형태를 결정하기 때문에 
		  					변수를 선언할때 자료형의 종류를 잘 작성해서 변수를 선언해야한다.
			
		 */
		// 소수점이 없는 값 1을 선언한 변수 a에 저장하기 위해서는 int 자료형으로 a라는 이름의 변수를 선언해야 한다.
		int  a;
		a = 1;
		
		// 소수점이 있는 값 2.4를 선언한 변수 m에 저장하기 위해서는 double 자료형으로 변수를 선언해야한다.
		double  m = 2.4;
		
		// 만일 변수 k에 참, 거짓 논리값 중 하나를 저장하기 위해서는 boolean 자료형으로 변수를 선언 해야한다.
		boolean k = true;
		
//--------------------------------------------------------------------------------------------------------------
		
		/*
		 	결론 2. 변수를 선언할 때 자료형을 사용하는데는 크게 2가지의 이유가 있다.
		 				두번째 이유는 변수 메모리의 사이즈(크기)를 결정하는데 변수 메모리에 할당되는 사이즈에 따라 
		 				저장할 수 있는 값의 허용 범위가 달라진다.
		 				정수 값을 저장하기 위해서는 자료형이 4가지(byte, short, int, long)나 되는 이유도 여기에 있다.
		 */
		
		// 변수 b를 byte 자료형으로 선언 했다면?
		byte b;
		
		// -128 ~127 사이의 값만 저장이 가능하기 때문에 128과 같이 허용범위를 넘어서는 값을 저장하게 되면 컴파일 에러가 발생한다.
		b = 128;
		
		
	}

}
